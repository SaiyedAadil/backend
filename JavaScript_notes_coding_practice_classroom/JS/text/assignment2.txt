Assignment 2:
    . JS Assignment 2
        1. FizzBuzz

        Write a function fizzBuzz that takes an integer n and:

        Returns "Fizz" if the number is divisible by 3.

        Returns "Buzz" if the number is divisible by 5.

        Returns "FizzBuzz" if the number is divisible by both 3 and 5.

        Otherwise, returns the number.

        2. Sum of Even Numbers

        Write a function sumEvenNumbers that takes an array of numbers and returns the sum of all even numbers in the array.

        3. Factorial Calculation

        Write a function factorial that calculates the factorial of a given number using a loop. If the number is negative, return -1 to indicate an invalid input.

        4. Find the Largest Number

        Write a function findLargestNumber that takes an array of numbers and returns the largest number using a loop.

        5. Check Prime Number

        Write a function isPrime that takes a number and returns true if it's a prime number, and false otherwise.

========================================================================

It looks like you've been working on a set of JavaScript challenges! Here's a quick breakdown of your assignments and their solutions:

1. **FizzBuzz Problem**:
   This function checks if a number is divisible by 3, 5, or both and returns the appropriate value.

   ```js
   function fizzBuzz(n) {
       if (n % 3 === 0 && n % 5 === 0) {
           return "FizzBuzz";
       } else if (n % 5 === 0) {
           return "Buzz";
       } else if (n % 3 === 0) {
           return "Fizz";
       } else {
           return n;
       }
   }
   ```

2. **Sum of Even Numbers**:
   This function takes an array and returns the sum of even numbers.

   ```js
   const sumEvenNumbers = (arr) => {
       return arr.reduce((acc, val) => (val % 2 === 0 ? acc + val : acc), 0);
   }
   // Example
   console.log(sumEvenNumbers([1, 2, 3, 4, 5, 6])); // Output: 12
   ```

3. **Factorial Calculation**:
   This function calculates the factorial of a number using a loop.

   ```js
   function factorial(n) {
       if (n < 0) return -1;
       let res = 1;
       for (let i = n; i >= 1; i--) {
           res *= i;
       }
       return res;
   }
   // Example
   console.log(factorial(5)); // Output: 120
   ```

4. **Find the Largest Number**:
   This function finds the largest number in an array using the `reduce` method.

   ```js
   const findLargestNumber = (arr) => {
       return arr.reduce((acc, val) => (val > acc ? val : acc), arr[0]);
   }
   // Example
   console.log(findLargestNumber([1, 3, 7, 4, 2])); // Output: 7
   ```

5. **Check Prime Number**:
   This function checks if a given number is a prime number.

   ```js
   const isPrime = (n) => {
       if (n < 2) return false;
       for (let i = 2; i < n; i++) {
           if (n % i === 0) return false;
       }
       return true;
   }
   // Example
   console.log(isPrime(7)); // Output: true
   ```

Would you like to dive deeper into any specific concept or function from these exercises?
===========================================================================

---------------- code 2 with code -----------------------------------
Here's a structured overview of your assignment notes, along with explanations for each function:

### Assignment 2: JavaScript Functions

#### 1. **FizzBuzz Function**
```javascript
function fizzBuzz(n) {
    if (n % 3 === 0 && n % 5 === 0) {
        return "FizzBuzz";
    } else if (n % 5 === 0) {
        return "Buzz";
    } else if (n % 3 === 0) {
        return "Fizz";
    } else {
        return n;
    }
}

// Example Usage
for (var i = 1; i < 20; i++) {
    console.log(fizzBuzz(i));
}
```
- **Description**: This function checks if a number is divisible by 3, 5, or both, returning the appropriate string or the number itself.

#### 2. **Sum of Even Numbers**
```javascript
const sumEvenNumbers = (arr) => {
    return arr.reduce((acc, val) => {
        return val % 2 === 0 ? acc + val : acc;
    }, 0);
};

// Example Usage
const arr = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
console.log(sumEvenNumbers(arr)); // Outputs: 30
```
- **Description**: This function takes an array of numbers and returns the sum of all even numbers using the `reduce` method.

#### 3. **Factorial Calculation**
```javascript
function factorial(n) {
    if (n < 0) return -1; // Invalid input
    let res = 1; 
    for (let i = n; i >= 1; i--) {
        res *= i; // Multiply result by each number down to 1
    }
    return res;
}

// Example Usage
console.log(factorial(3)); // Outputs: 6
```
- **Description**: This function calculates the factorial of a given number using a loop. It returns -1 for negative inputs.

#### 4. **Find the Largest Number**
```javascript
const findLargestNumber = (arr) => {
    return arr.reduce((acc, val) => {
        return val > acc ? val : acc;
    }, arr[0]);
};

// Example Usage
console.log(findLargestNumber(arr)); // Outputs: 10
```
- **Description**: This function finds the largest number in an array using `reduce`. It compares each value to find the maximum.

#### 5. **Check Prime Number**
```javascript
const isPrime = (n) => {
    if (n < 2) return false; // 0 and 1 are not prime numbers
    for (let i = 2; i < n; i++) {
        if (n % i === 0) {
            return false; // If divisible by any number other than 1 and itself
        }
    }
    return true; // It's prime
};

// Example Usage
console.log(isPrime(7)); // Outputs: true
```
- **Description**: This function checks if a number is prime by testing divisibility from 2 up to the number itself.

### Summary of Concepts

- **Loops and Conditionals**: Using loops (like `for`) and conditionals (like `if-else`) effectively.
- **Array Methods**: Utilizing methods like `reduce` for accumulation and transformation.
- **Function Design**: Structuring functions to handle specific tasks with clear inputs and outputs.
- **Recursion vs. Iteration**: Understanding the two common ways to perform operations (recursive and iterative).

If you have further questions about any specific part of your assignment or want to explore additional topics, feel free to ask!